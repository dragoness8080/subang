package com.gcs.suban.base;

import android.app.Activity;
import android.content.Context;
import android.content.pm.ActivityInfo;
import android.graphics.Bitmap;
import android.graphics.Point;
import android.net.ConnectivityManager;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.util.Log;
import android.view.Display;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.WindowManager.LayoutParams;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.LayoutAnimationController;
import android.widget.ListView;

import com.gcs.suban.R;
import com.gcs.suban.adapter.ConfirmAdapter;
import com.gcs.suban.tools.ToastTool;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.umeng.analytics.MobclickAgent;

import cn.pedant.SweetAlert.SweetAlertDialog;

public abstract class BaseActivity extends Activity implements OnClickListener {
	protected String TAG;
	protected Activity context = this;
	protected int activityState;
	private static final int ACTIVITY_RESUME = 0;
	private static final int ACTIVITY_STOP = 1;
	private static final int ACTIVITY_PAUSE = 2;
	private static final int ACTIVITY_DESTROY = 3;
	protected ImageLoader imageLoader;
	protected DisplayImageOptions options; // ???????????????
	protected DisplayImageOptions options2; 
	protected DisplayImageOptions options3; 
	protected DisplayImageOptions options4; 
	protected SwipeRefreshLayout swipeRefreshLayout;
	
	protected Animation animation;
	protected LayoutAnimationController controller;
	
	protected SweetAlertDialog dialog;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);	//强制竖屏
		TAG = getRunningActivityName();
		Log.i(TAG, "---------onCreate ");
		animation = new AlphaAnimation(0f, 1f);	//淡入淡出动画效果
		animation.setDuration(200);
		controller = new LayoutAnimationController(animation, 1f);
		controller.setOrder(LayoutAnimationController.ORDER_NORMAL);
		initDialog();
		init();
	}
	
	//???????
		protected abstract void init();
		
		// ?????????
		protected void initDialog() {
			dialog = new SweetAlertDialog(context,
					SweetAlertDialog.PROGRESS_TYPE).setTitleText("加载中...");
			dialog.setCancelable(false);
		}

	// ???????????????
	protected void SetWindow() {
		WindowManager m = getWindowManager();
		Display d = m.getDefaultDisplay(); // ???????????
		LayoutParams p = getWindow().getAttributes(); // ???????????????
		Point size = new Point();
		d.getSize(size);
		p.width = (int) (size.x * 1.0);// ?????????????1.0
		// p.height = (int) (size.y * 1.0); //?????????????1.0
		getWindow().setAttributes(p);
	}

	// ??????????Activity????
	private String getRunningActivityName() {
		String contextString = context.toString();
		return contextString.substring(contextString.lastIndexOf(".") + 1,
				contextString.indexOf("@"));
	}

	// ?????????
	protected boolean checkNetworkState() {
		boolean flag = false;
		// ??????????????
		ConnectivityManager manager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		// ????????????????????
		if (manager.getActiveNetworkInfo() != null) {
			flag = manager.getActiveNetworkInfo().isAvailable();
		}
		if (!flag) {
			setNetwork();
		} else {
			// Toast.makeText(this, "wifi is open!", Toast.LENGTH_SHORT).show();
		}

		return flag;
	}

	/**
	 * ?????????????????????????
	 */
	private void setNetwork() {
		ToastTool.showToast(this, "???????????????");
	}

	// imageLoader?????
		protected void InitImageLoader() {
			imageLoader = ImageLoader.getInstance();
			options = new DisplayImageOptions.Builder()
				//	.showImageOnLoading(R.drawable.bg_pic) // ????????????????????
				//	.showImageForEmptyUri(R.drawable.bg_pic) // ??????Uri????????????????????
					.showImageOnFail(R.drawable.bg_pic) // ??????????????????????????????????
					.imageScaleType(ImageScaleType.IN_SAMPLE_INT) // ????????
					.bitmapConfig(Bitmap.Config.RGB_565)// ???????????????//
					.cacheInMemory(true) // ??????????????????????
					.cacheOnDisk(true) // ?????????????????SD????
					.displayer(new RoundedBitmapDisplayer(0)) // ???????????
					.build(); // ???????
			options2 = new DisplayImageOptions.Builder()
				//.showImageOnLoading(R.drawable.bg_pic) // ????????????????????
				//.showImageForEmptyUri(R.drawable.bg_pic) // ??????Uri????????????????????
				.showImageOnFail(R.drawable.bg_pic) // ??????????????????????????????????
				.imageScaleType(ImageScaleType.IN_SAMPLE_INT) // ????????
				.bitmapConfig(Bitmap.Config.RGB_565)// ???????????????//
				.cacheInMemory(true) // ??????????????????????
				.cacheOnDisk(true) // ?????????????????SD????
				.displayer(new RoundedBitmapDisplayer(20)) // ???????????
				.build(); // ???????
			options3 = new DisplayImageOptions.Builder()
			//	.showImageOnLoading(R.drawable.bg_pic) // ????????????????????
			//	.showImageForEmptyUri(R.drawable.bg_pic) // ??????Uri????????????????????
				.showImageOnFail(R.drawable.bg_pic) // ??????????????????????????????????
				.imageScaleType(ImageScaleType.IN_SAMPLE_INT) // ????????
				.bitmapConfig(Bitmap.Config.RGB_565)// ???????????????//
				.cacheInMemory(true) // ??????????????????????
				.cacheOnDisk(true) // ?????????????????SD????
				.displayer(new RoundedBitmapDisplayer(90)) // ???????????
				.build(); // ???????
			options4= new DisplayImageOptions.Builder()
		//	.showImageOnLoading(R.drawable.bg_pic) // ????????????????????
		//	.showImageForEmptyUri(R.drawable.bg_pic) // ??????Uri????????????????????
			.showImageOnFail(R.drawable.bg_pic) // ??????????????????????????????????
			.imageScaleType(ImageScaleType.IN_SAMPLE_INT) // ????????
			.bitmapConfig(Bitmap.Config.RGB_565)// ???????????????//
			.cacheInMemory(true) // ??????????????????????
			.cacheOnDisk(true) // ?????????????????SD????
			.displayer(new RoundedBitmapDisplayer(360)) // ???????????
			.build(); // ???????
		}

	// SwipeRefreshLayout?????
	protected void InitSwipeRefreshLayout() {
		swipeRefreshLayout.setColorSchemeResources(R.color.themeRed,
				R.color.themeRed, R.color.themeRed, R.color.themeRed);
	}
	
	protected void setListViewHeightBasedOnChildren(ListView listView) {
		// ???ListView?????Adapter
		ConfirmAdapter listAdapter = (ConfirmAdapter) listView.getAdapter();
		if (listAdapter == null) {
			return;
		}

		int totalHeight = 0;
		for (int i = 0, len = listAdapter.getCount(); i < len; i++) {
			// listAdapter.getCount()??????????????
			View listItem = listAdapter.getView(i, null, listView);
			// ????????View ????
			listItem.measure(0, 0);
			// ????????????????
			totalHeight += listItem.getMeasuredHeight();
		}

		ViewGroup.LayoutParams params = listView.getLayoutParams();
		params.height = totalHeight
				+ (listView.getDividerHeight() * (listAdapter.getCount() - 1));
		// listView.getDividerHeight()??????????????????
		// params.height?????????ListView??????????????
		listView.setLayoutParams(params);
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		Log.i(TAG, "---------onStart ");
	}

	@Override
	protected void onResume() {
		super.onResume();
		activityState = ACTIVITY_RESUME;
		Log.i(TAG, "---------onResume ");
		MobclickAgent.onResume(this);
	}

	@Override
	protected void onStop() {
		super.onStop();
		activityState = ACTIVITY_STOP;
		Log.i(TAG, "---------onstop");
	}
	@Override
	protected void onPause() {
		super.onPause();
		activityState = ACTIVITY_PAUSE;
		Log.i(TAG, "---------onPause ");
		MobclickAgent.onPause(this);
	}

	@Override
	protected void onRestart() {
		super.onRestart();
		Log.i(TAG, "---------onRestart ");
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		activityState = ACTIVITY_DESTROY;
		Log.i(TAG, "---------onDestroy ");
	}
}
